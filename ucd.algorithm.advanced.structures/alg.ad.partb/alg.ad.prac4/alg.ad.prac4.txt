+ Answer questions A3,4-6,7; B1,3, and questions C4
---------------------------------------------------

3A. Show how the state of both an array-based and a link-based Queue changes 
after each of the following operations:enqueue(‘Ireland’), 
dequeue(),enqueue(‘England’), dequeue(),enqueue(‘Wales’), dequeue(), 
enqueue(‘Scotland’), dequeue(),enqueue(‘France’), enqueue(‘Germany’) 

4A. Write out the pseudo code for the insertLast(o) operation of the Deque ADT. The 
insertFirst(o) pseudo code is given below as an example of a similar 
operation

NOTE: once you have written a first version of your pseudo code, test it using 
two dry runs: (1) inserting into an empty Deque, and (2) inserting into a 
non-empty Deque. 

5A. Write out the pseudo code for the removeLast() and removeFirst() operations 
of the Deque ADT. As with question 4, for each removal operation consider 2 
cases: (1) a Deque containing 1 item and (2) a Deque containing more than 1 
item. 

6A. Write out the pseudo code for the isEmpty(), size(), front() and rear() 
operations of the Deque ADT. 

7A. Show how the state of a link-based Deque changes after each of the following 
operations:insertFirst(‘Ireland’), removeLast(),insertLast(‘England’), 
removeFirst(),insertLast(‘Wales’), insertFirst(‘Scotland’), insertLast(‘France’), 
removeFirst(), removeLast(), insertLast(‘Germany’) After the last operation, 
list the countries that were removed from the Deque and the countries held in the Deque 

---------------------------------------------------------------------

1B. ArrayQueue: Create a new Java class called ArrayQueue that realizes the 
array-based Queue implementation strategy. As with the Stack implementations 
(Assignment 4), remember to implement a toString() method to help you debug / 
visualize the operation of the class. 

3B. LinkedDeque: Create a new Java class called LinkedDeque that realizes the 
link-based Deque implementation strategy.Your implementation should be based on 
the pseudo code you completed in questions A4-6. Again, remember to implement a 
toString() method to help you debug / visualize the operation of the class. 

---------------------------------------------------------------------

4C. Write two main methods that correspond to the series of insertion and removal 
operations outlined in question A7. 
