SEMESTER II EXAMINATION – 2016/2017 COMP 30540 Game Development Prof. S. Dobson 
Prof. P. Cunningham Assoc. Prof. A. Cater* Time Allowed: 2 Hours Instructions 
for Candidates Answer three questions. Each question carries 100 marks. 
Instructions for Invigilators Written materials and electronic devices are 
prohibited.

0. (Shape collision)
	- What are voronoi regions? Illustrate by discussing Voronoi regions surrounding a rectangle in an infinite plane.
	- What is the Minkowski sum of two 2D shapes, and similarly, of two 3D shapes? Illustrate with an example of two off-origin non-identical triangles.
	- Give an algorithm for cheaply computing whether a circle of given radius and centre position overlaps a coplanar axis-aligned rectangle of given size and position.
	- Compose and explain a similar algorithm for cheaply computing whether a given axis-aligned rectangle overlaps a given coplanar square tilted at - Refer to the diagram below:
	- Explain why testing for intersection of two 3D convex shapes may make use of the Minkowski sum of one shape and the reflection-through-the-origin of the other.
	
1. (Less common AI techniques)
	- Why might the Sense-Think-Act cycle of a NPC AI be extended to use some learning? 2b. Describe two simple forms of learning that might be incorporated into NPC AI
	- Why would AAA development teams choose to avoid more sophisticated learning methods?
	- Outline an algorithm for processing a 2D map in which passable and impassable pixels are easily distinguished or even labelled, to find choke points where  movement might be difficult or impossible.
	
	- (Behaviour Trees)
		- What are behaviour trees? What may a leaf node of a behaviour tree consist of?
		- Describe the most common types of behaviour tree interior node, in their simplest forms.
		- Why are less simple forms of those interior node types sometimes used?
		- So-called Decorator nodes are also sometimes . Give examples of their role in a behaviour tree.
		- Why may errors arise in using behaviour trees, and how are they accommodated?

2. (Physics)
	- How does a physics-based approach help in modelling the behaviours of non- rigid 3D bodies and of colliding rigid bodies?
	- Discuss how modelling two distinct types of non-rigid 3D bodies may be done using particles and links, describing any properties that should be associated 		with particles and links.
	- Why does physics simulation rest on numerical integration? What dangers attend the use of numerical integration?
	
3. (BSP) 
	- What is a Binary Space Partitioning (BSP) of a set of polygons representing surfaces in a 3D scene?
	- Explain how a BSP allows realistic rendering of such polygons without sorting polygons by distance from a camera and without Z-buffering.
	- Give two reasons why forming a BSP is facilitated if only triangles are used, and not general polygons.
	- It is desirable that each distinct object should have its surface polygons represented in its own BSP tree. Why is this so? When, and how often, should a BSP for an entire scene be created?
	- Why is it useful to associate bounding boxes with BSP tree nodes, in addition to the polygons they contain?

4. (Behaviour Trees)
	-	What are behaviour trees? What may a leaf node of a behaviour tree consist of?
	-	Describe the most common types of behaviour tree interior node, in their simplest forms.
	-	So-called Decorator Nodes are also sometimes used. Give examples of their role in a behavior tree.
	-	Why may errors arise in using behaviour trees, and how are they accommodated?
	-	In a looping animation of a 3D character, some of its poses ought to have particular properties. Explain those properties.
	-	Give two separate reasons why a character may need to be rendered in a posture that has not been explicitly represented as a keyframe pose.
	-	What is the difference between forward kinematics and inverse kinematics?
	-	Explain why with inverse kinematics, the coordinate descent technique may suffer the “2-bone problem”.
	-	Why are less simple forms of those interior node types sometimes used?

5. (Animation)
	- What are the processes of rigging and skinning in 3D character animation?
	- How is the orientation of an entire 3D object represented using Euler angles?
	- How is the orientation of an entire 3D object represented using an exponential map?
	- How is the orientation of an entire 3D object represented using a normalised quaternion?
	- What are the ideal properties of an angular interpolation algorithm?
	- In what ways do nlerp and slerp applied to quaternions fall short of having these ideal properties?

6. (Audio)
	- Digitally sampled audio is used for much of the sound played during games. Explain how features of human hearing, and the Nyquist limit, are used to choose sampling rates for digital sampling.
	- Explain simple processing that can be performed on sampled mono sound to give the illusion of sources being situated in, and/or moving in, a 2D or 3D game level.
	- Discuss briefly how timing and head modelling can be used to provide more convincing 3D audio effects using sampled sound.
	- Discuss how aspects of the simulated world in which sounds travel from source to ear might need to be modelled for a convincing audio experience.
	- Why is nlerp accepted in practice for angular interpolation of quaternions?

7. (Binary Space Partitioning)
	- Explain how a binary space partitioning tree (BSPT) organizes a set of polygons representing the exterior surface of a solid 3D game object.
	- How is a BSPT used to decide the order of drawing polygons onto a display?
	- Explain how the BSPT for an entire scene can be built by merging BSPTs each representing individual objects and/or the environment in which they are positioned.
	- How does the BSPT organization of polygons assist in determining whether the movement of one object brings it into collision with another object?
	- Why is it preferable to represent the volume of all the polygons represented within a BSPT using a convex hull rather than using an Object-Bounding-Box	aligned with the normal to its pivot plane?

8. (Shape collision)
	- What are voronoi regions? Illustrate by discussing Voronoi regions surrounding a rectangle in an infinite plane.
	- What is the Minkowski sum of two 2D shapes, and similarly, of two 3D shapes? Illustrate with an example of two off-origin non-identical triangles.
	- Give an algorithm for cheaply computing whether a circle of given radius and centre position overlaps a coplanar axis-aligned rectangle of given size and position.
	- Compose and explain a similar algorithm for cheaply computing whether a given axis-aligned rectangle overlaps a given coplanar square tilted at 45°. Refer to the diagram below:
	- Explain why testing for intersection of two 3D convex shapes may make use of the Minkowski sum of one shape and the reflection-through-the-origin of the 	other.

9. (Less common AI techniques)
	- Why might the Sense-Think-Act cycle of a NPC AI be extended to use some learning?
	- Describe two simple forms of learning that might be incorporated into NPC AI.
	- Why would AAA development teams choose to avoid more sophisticated learning methods?
	- Outline an algorithm for processing a 2D map in which passable and impassable pixels are easily distinguished or even labelled, to find choke points where element might be difficult or impossible.

10. (Behaviour Trees)
	- What are behaviour trees? What may a leaf node of a behaviour tree consist of?
  	- Composite : These are the nodes that define the root of a branch and the base rules for how that branch is executed
    - Task : These are the leaves of the Behavior Tree, the nodes that "do" things and don't have an output connection.
    - Decorator : Also known as conditionals. These attach to another node and make decisions on whether or not a branch in the tree, or even a single node, can be executed.
    - Service : These attach to Composite nodes, and will execute at their defined frequency as long as their branch is being executed. These are often used to make checks and to update the Blackboard. These take the place of traditional Parallel nodes in other Behavior Tree systems.
    - Root : The Root node is unique in the Behavior Tree and is the starting point for the Behavior Tree. It can only have one connection, and you cannot attach Decorators or Services to it. The Root Node has no properties of its own, but selecting it will show the Behavior Tree properties in the Details Panel, where you can set the Blackboard Asset of the Behavior Tree.

	- Describe the most common types of behaviour tree interior node, in their simplest forms.
	- Why are less simple forms of those interior node types sometimes used?
	- So-called Decorator nodes are also sometimes used. Give examples of their role in a behaviour tree.
	- Why may errors arise in using behaviour trees, and how are they accommodated?

11. (Physics)
	- How does a physics-based approach help in modelling the behaviours of non- rigid 3D bodies and of colliding rigid bodies?
	- Discuss how modelling two distinct types of non-rigid 3D bodies may be done using particles and links, describing any properties that should be associated with particles and links.
	- Why does physics simulation rest on numerical integration? What dangers attend the use of numerical integration?

12. (BSP)
	- What is a Binary Space Partitioning (BSP) of a set of polygons representing surfaces in a 3D scene?
	- Explain how a BSP allows realistic rendering of such polygons without sorting polygons by distance from a camera and without Z-buffering.
	- Give two reasons why forming a BSP is facilitated if only triangles are used, and not general polygons.
	- It is desirable that each distinct object should have its surface polygons represented in its own BSP tr- Why is this so? When, and how often, should a BSP for an entire scene be created?
	- Why is it useful to associate bounding boxes with BSP tree nodes, in addition to the polygons they contain?
